import { WatchDeps, WatchCallback, WatchStopHandle } from '../watch/index.js';
import { OnOptions } from 'solid-js/types/reactive/signal';
import { ConfigurableEventFilter } from '../utils/filters.js';
import { MapSources, MapOldSources } from '../utils/types.js';
import 'solid-js';

interface WatchWithFilterOptions extends OnOptions, ConfigurableEventFilter {
}
declare function watchWithFilter<T extends Readonly<Array<WatchDeps<unknown>>>>(sources: [...T], cb: WatchCallback<MapSources<T>, MapOldSources<T>>, options?: WatchWithFilterOptions): WatchStopHandle;
declare function watchWithFilter<T>(source: WatchDeps<T>, cb: WatchCallback<T, T>, options?: WatchWithFilterOptions): WatchStopHandle;
declare function watchWithFilter<T extends object>(source: T, cb: WatchCallback<T, T>, options?: WatchWithFilterOptions): WatchStopHandle;

export { WatchWithFilterOptions, watchWithFilter };
