import { Accessor } from 'solid-js';
import { MaybeAccessor, Pausable } from '../utils/types.js';
import 'solid-js/types/reactive/signal';

interface UseIntervalOptions<Controls extends boolean> {
    /**
     * Expose more controls
     *
     * @default false
     */
    controls?: Controls;
    /**
     * Execute the update immediately on calling
     *
     * @default true
     */
    immediate?: boolean;
    /**
     * Callback on every interval
     */
    callback?: (count: number) => void;
}
interface UseIntervalControls {
    counter: Accessor<number>;
    reset: () => void;
}
/**
 * Reactive counter increases on every interval
 */
declare function useInterval(interval?: MaybeAccessor<number>, options?: UseIntervalOptions<false>): Accessor<number>;
declare function useInterval(interval: MaybeAccessor<number>, options: UseIntervalOptions<true>): UseIntervalControls & Pausable;

export { UseIntervalControls, UseIntervalOptions, useInterval };
