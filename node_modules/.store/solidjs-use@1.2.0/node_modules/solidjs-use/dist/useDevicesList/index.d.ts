import { Accessor } from 'solid-js';
import { ConfigurableNavigator } from '../_configurable.js';

interface UseDevicesListOptions extends ConfigurableNavigator {
    onUpdated?: (devices: MediaDeviceInfo[]) => void;
    /**
     * Request for permissions immediately if it's not granted,
     * otherwise label and deviceIds could be empty
     *
     * @default false
     */
    requestPermissions?: boolean;
    /**
     * Request for types of media permissions
     *
     * @default { audio: true, video: true }
     */
    constraints?: MediaStreamConstraints;
}
interface UseDevicesListReturn {
    /**
     * All devices
     */
    devices: Accessor<MediaDeviceInfo[]>;
    videoInputs: Accessor<MediaDeviceInfo[]>;
    audioInputs: Accessor<MediaDeviceInfo[]>;
    audioOutputs: Accessor<MediaDeviceInfo[]>;
    permissionGranted: Accessor<boolean>;
    ensurePermissions: () => Promise<boolean>;
    isSupported: Accessor<boolean>;
}
/**
 * Reactive `enumerateDevices` listing available input/output devices
 */
declare function useDevicesList(options?: UseDevicesListOptions): UseDevicesListReturn;

export { UseDevicesListOptions, UseDevicesListReturn, useDevicesList };
