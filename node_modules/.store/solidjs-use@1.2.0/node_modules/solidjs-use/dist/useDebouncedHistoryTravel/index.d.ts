import { MaybeAccessor } from '@solidjs-use/shared';
import { Accessor, Signal } from 'solid-js';
import { UseHistoryTravelAccessorReturn, UseHistoryTravelSignalReturn, UseHistoryTravelOptions } from '../useHistoryTravel/index.js';
import '../useManualHistoryTravel/index.js';
import '../useCloned/index.js';
import 'solid-js/types/reactive/signal';

type UseDebouncedHistoryTravelAccessorReturn<Raw, Serialized = Raw> = UseHistoryTravelAccessorReturn<Raw, Serialized>;
type UseDebouncedHistoryTravelSignalReturn<Raw, Serialized = Raw> = UseHistoryTravelSignalReturn<Raw, Serialized>;
/**
 * Shorthand for `useHistoryTravel` with debounce filter.
 */
declare function useDebouncedHistoryTravel<Raw, Serialized = Raw>(source: Accessor<Raw>, options?: Omit<UseHistoryTravelOptions<Raw, Serialized>, 'eventFilter'> & {
    debounce?: MaybeAccessor<number>;
}): UseDebouncedHistoryTravelAccessorReturn<Raw, Serialized>;
declare function useDebouncedHistoryTravel<Raw, Serialized = Raw>(source: Signal<Raw>, options?: Omit<UseHistoryTravelOptions<Raw, Serialized>, 'eventFilter'> & {
    debounce?: MaybeAccessor<number>;
}): UseDebouncedHistoryTravelSignalReturn<Raw, Serialized>;

export { UseDebouncedHistoryTravelAccessorReturn, UseDebouncedHistoryTravelSignalReturn, useDebouncedHistoryTravel };
