import { UseHistoryTravelOptions, UseHistoryTravelAccessorReturn, UseHistoryTravelSignalReturn } from '../useHistoryTravel/index.js';
import { MaybeAccessor } from '@solidjs-use/shared';
import { Accessor, Signal } from 'solid-js';
import '../useManualHistoryTravel/index.js';
import '../useCloned/index.js';
import 'solid-js/types/reactive/signal';

type UseThrottledHistoryTravelOptions<Raw, Serialized = Raw> = Omit<UseHistoryTravelOptions<Raw, Serialized>, 'eventFilter'> & {
    throttle?: MaybeAccessor<number>;
    trailing?: boolean;
};
type UseThrottledHistoryTravelAccessorReturn<Raw, Serialized = Raw> = UseHistoryTravelAccessorReturn<Raw, Serialized>;
type UseThrottledHistoryTravelSignalReturn<Raw, Serialized = Raw> = UseHistoryTravelSignalReturn<Raw, Serialized>;
/**
 * Shorthand for `useHistoryTravel` with throttled filter.
 */
declare function useThrottledHistoryTravel<Raw, Serialized = Raw>(source: Accessor<Raw>, options?: UseThrottledHistoryTravelOptions<Raw, Serialized>): UseThrottledHistoryTravelAccessorReturn<Raw, Serialized>;
declare function useThrottledHistoryTravel<Raw, Serialized = Raw>(source: Signal<Raw>, options?: UseThrottledHistoryTravelOptions<Raw, Serialized>): UseThrottledHistoryTravelSignalReturn<Raw, Serialized>;

export { UseThrottledHistoryTravelAccessorReturn, UseThrottledHistoryTravelOptions, UseThrottledHistoryTravelSignalReturn, useThrottledHistoryTravel };
