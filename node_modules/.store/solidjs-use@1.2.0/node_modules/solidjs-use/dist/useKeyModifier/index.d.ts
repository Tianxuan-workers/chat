import { Accessor } from 'solid-js';
import { WindowEventName } from '../useEventListener/index.js';
import { ConfigurableDocument } from '../_configurable.js';
import '@solidjs-use/shared';

type KeyModifier = 'Alt' | 'AltGraph' | 'CapsLock' | 'Control' | 'Fn' | 'FnLock' | 'Meta' | 'NumLock' | 'ScrollLock' | 'Shift' | 'Symbol' | 'SymbolLock';
interface UseModifierOptions<Initial> extends ConfigurableDocument {
    /**
     * Event names that will prompt update to modifier states
     *
     * @default ['mousedown', 'mouseup', 'keydown', 'keyup']
     */
    events?: WindowEventName[];
    /**
     * Initial value of the returned Accessor
     *
     * @default null
     */
    initial?: Initial;
}
type UseKeyModifierReturn<Initial> = Accessor<Initial extends boolean ? boolean : boolean | null>;
declare function useKeyModifier<Initial extends boolean | null>(modifier: KeyModifier, options?: UseModifierOptions<Initial>): UseKeyModifierReturn<Initial>;

export { KeyModifier, UseKeyModifierReturn, UseModifierOptions, useKeyModifier };
