import { Accessor } from 'solid-js';
import { UseStorageOptions, SerializerAsync } from '../useStorage/index.js';
import { StorageLikeAsync } from '../ssr-handlers.js';
import { RemovableSignal } from '@solidjs-use/shared';
import '../_configurable.js';

interface UseStorageAsyncOptions<T> extends Omit<UseStorageOptions<T>, 'serializer'> {
    /**
     * Custom data serialization
     */
    serializer?: SerializerAsync<T>;
}
declare function useStorageAsync(key: string, initialValue: Accessor<string>, storage?: StorageLikeAsync, options?: UseStorageAsyncOptions<string>): Accessor<string>;
declare function useStorageAsync(key: string, initialValue: string, storage?: StorageLikeAsync, options?: UseStorageAsyncOptions<string>): RemovableSignal<string>;
declare function useStorageAsync(key: string, initialValue: Accessor<boolean>, storage?: StorageLikeAsync, options?: UseStorageAsyncOptions<boolean>): Accessor<boolean>;
declare function useStorageAsync(key: string, initialValue: boolean, storage?: StorageLikeAsync, options?: UseStorageAsyncOptions<boolean>): RemovableSignal<boolean>;
declare function useStorageAsync(key: string, initialValue: Accessor<number>, storage?: StorageLikeAsync, options?: UseStorageAsyncOptions<number>): Accessor<number>;
declare function useStorageAsync(key: string, initialValue: number, storage?: StorageLikeAsync, options?: UseStorageAsyncOptions<number>): RemovableSignal<number>;
declare function useStorageAsync<T>(key: string, initialValue: Accessor<T>, storage?: StorageLikeAsync, options?: UseStorageAsyncOptions<T>): Accessor<T>;
declare function useStorageAsync<T>(key: string, initialValue: T, storage?: StorageLikeAsync, options?: UseStorageAsyncOptions<T>): RemovableSignal<T>;
declare function useStorageAsync<T = unknown>(key: string, initialValue: Accessor<null>, storage?: StorageLikeAsync, options?: UseStorageAsyncOptions<T>): Accessor<T>;
declare function useStorageAsync<T = unknown>(key: string, initialValue: null, storage?: StorageLikeAsync, options?: UseStorageAsyncOptions<T>): RemovableSignal<T>;

export { UseStorageAsyncOptions, useStorageAsync };
