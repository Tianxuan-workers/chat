import { UseAsyncStateOptions, UseAsyncStateReturn } from '../useAsyncState/index.js';
import { MaybeAccessor } from '@solidjs-use/shared';
import 'solid-js';

interface UseImageOptions {
    /** Address of the resource */
    src: string;
    /** Images to use in different situations, e.g., high-resolution displays, small monitors, etc. */
    srcset?: string;
    /** Image sizes for different page layouts */
    sizes?: string;
}
/**
 * Reactive load an image in the browser, you can wait the result to display it or show a fallback.
 *
 * @param options Image attributes, as used in the <img> tag
 */
declare const useImage: (options: MaybeAccessor<UseImageOptions>, asyncStateOptions?: UseAsyncStateOptions) => UseAsyncStateReturn<HTMLImageElement | undefined, []>;
type UseImageReturn = ReturnType<typeof useImage>;

export { UseImageOptions, UseImageReturn, useImage };
