import * as solid_js from 'solid-js';
import { MaybeElementAccessor } from '@solidjs-use/shared';
import { MouseSourceType } from '../useMouse/index.js';
import { ConfigurableWindow } from '../_configurable.js';
import '../types.js';

interface MousePressedOptions extends ConfigurableWindow {
    /**
     * Listen to `touchstart` `touchend` events
     *
     * @default true
     */
    touch?: boolean;
    /**
     * Listen to `dragstart` `drop` and `dragend` events
     *
     * @default true
     */
    drag?: boolean;
    /**
     * Initial values
     *
     * @default false
     */
    initialValue?: boolean;
    /**
     * Element target to be capture the click
     */
    target?: MaybeElementAccessor;
}
/**
 * Reactive mouse position.
 */
declare function useMousePressed(options?: MousePressedOptions): {
    pressed: solid_js.Accessor<boolean>;
    sourceType: solid_js.Accessor<MouseSourceType>;
};
type UseMousePressedReturn = ReturnType<typeof useMousePressed>;

export { MousePressedOptions, UseMousePressedReturn, useMousePressed };
