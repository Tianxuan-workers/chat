import { Accessor, OnOptions } from 'solid-js/types/reactive/signal';

declare type WatchArrayCallback<V = any, OV = any> = (value: V, oldValue: OV, added: V, removed: OV) => any;
/**
 * Watch for an array with additions and removals.
 */
declare function watchArray<T, Defer extends Readonly<boolean> = false>(source: Accessor<T[]>, cb: WatchArrayCallback<T[], Defer extends false ? T[] | undefined : T[]>, options?: OnOptions): () => void;

export { WatchArrayCallback, watchArray };
