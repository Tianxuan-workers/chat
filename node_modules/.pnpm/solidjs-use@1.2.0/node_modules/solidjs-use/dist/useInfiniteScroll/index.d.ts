import { UseScrollOptions, UseScrollReturn } from '../useScroll/index.js';
import { MaybeAccessor } from '@solidjs-use/shared';
import '@solidjs-use/shared/solid-to-vue';
import 'solid-js';

interface UseInfiniteScrollOptions extends UseScrollOptions {
    /**
     * The minimum distance between the bottom of the element and the bottom of the viewport
     *
     * @default 0
     */
    distance?: number;
    /**
     * The direction in which to listen the scroll.
     *
     * @default 'bottom'
     */
    direction?: 'top' | 'bottom' | 'left' | 'right';
    /**
     * Whether to preserve the current scroll position when loading more items.
     *
     * @default false
     */
    preserveScrollPosition?: boolean;
}
/**
 * Reactive infinite scroll.
 */
declare function useInfiniteScroll(element: MaybeAccessor<HTMLElement | SVGElement | Window | Document | null | undefined>, onLoadMore: (state: UseScrollReturn) => void | Promise<void>, options?: UseInfiniteScrollOptions): void;

export { UseInfiniteScrollOptions, useInfiniteScroll };
