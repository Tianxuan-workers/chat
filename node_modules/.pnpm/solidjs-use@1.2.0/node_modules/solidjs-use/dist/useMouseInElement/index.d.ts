import { UseMouseOptions, MouseSourceType } from '../useMouse/index.js';
import * as solid_js from 'solid-js';
import { MaybeElementAccessor } from '@solidjs-use/shared';
import '../types.js';
import '../_configurable.js';

interface MouseInElementOptions extends UseMouseOptions {
    handleOutside?: boolean;
}
/**
 * Reactive mouse position related to an element.
 */
declare function useMouseInElement(target?: MaybeElementAccessor, options?: MouseInElementOptions): {
    x: solid_js.Accessor<number>;
    y: solid_js.Accessor<number>;
    sourceType: solid_js.Accessor<MouseSourceType>;
    elementX: solid_js.Accessor<number>;
    elementY: solid_js.Accessor<number>;
    elementPositionX: solid_js.Accessor<number>;
    elementPositionY: solid_js.Accessor<number>;
    elementHeight: solid_js.Accessor<number>;
    elementWidth: solid_js.Accessor<number>;
    isOutside: solid_js.Accessor<boolean>;
    stop: () => void;
};
type UseMouseInElementReturn = ReturnType<typeof useMouseInElement>;

export { MouseInElementOptions, UseMouseInElementReturn, useMouseInElement };
