import { RemovableSignal } from '@solidjs-use/shared';
import { Accessor } from 'solid-js';
import { UseStorageOptions } from '../useStorage/index.js';
import '../_configurable.js';
import '../ssr-handlers.js';

declare function useSessionStorage(key: string, initialValue: Accessor<string>, options?: UseStorageOptions<string>): Accessor<string>;
declare function useSessionStorage(key: string, initialValue: string, options?: UseStorageOptions<string>): RemovableSignal<string>;
declare function useSessionStorage(key: string, initialValue: Accessor<boolean>, options?: UseStorageOptions<boolean>): Accessor<boolean>;
declare function useSessionStorage(key: string, initialValue: boolean, options?: UseStorageOptions<boolean>): RemovableSignal<boolean>;
declare function useSessionStorage(key: string, initialValue: Accessor<number>, options?: UseStorageOptions<number>): Accessor<number>;
declare function useSessionStorage(key: string, initialValue: number, options?: UseStorageOptions<number>): RemovableSignal<number>;
declare function useSessionStorage<T>(key: string, initialValue: Accessor<T>, options?: UseStorageOptions<T>): Accessor<T>;
declare function useSessionStorage<T>(key: string, initialValue: T, options?: UseStorageOptions<T>): RemovableSignal<T>;
declare function useSessionStorage<T = unknown>(key: string, initialValue: Accessor<null>, options?: UseStorageOptions<T>): Accessor<T>;
declare function useSessionStorage<T = unknown>(key: string, initialValue: null, options?: UseStorageOptions<T>): RemovableSignal<T>;

export { useSessionStorage };
