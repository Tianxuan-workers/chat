import { Accessor } from 'solid-js';
import { ConfigurableWindow } from '../_configurable.js';

interface UseWebWorkerReturn<Data = any> {
    data: Accessor<Data>;
    post: (typeof Worker.prototype)['postMessage'];
    terminate: () => void;
    worker: Accessor<Worker | undefined>;
}
type WorkerFn = (...args: unknown[]) => Worker;
/**
 * Simple Web Workers registration and communication.
 */
declare function useWebWorker<T = any>(url: string, workerOptions?: WorkerOptions, options?: ConfigurableWindow): UseWebWorkerReturn<T>;
/**
 * Simple Web Workers registration and communication.
 */
declare function useWebWorker<T = any>(worker: Worker | WorkerFn): UseWebWorkerReturn<T>;

export { UseWebWorkerReturn, useWebWorker };
