import * as _solidjs_use_shared from '@solidjs-use/shared';
import { Accessor } from 'solid-js';
import { ConfigurableWindow, ConfigurableNavigator } from '../_configurable.js';

interface UseGamepadOptions extends ConfigurableWindow, ConfigurableNavigator {
}
/**
 * Maps a standard standard gamepad to an Xbox 360 Controller.
 */
declare function mapGamepadToXbox360Controller(gamepad: Accessor<Gamepad | undefined>): Accessor<{
    buttons: {
        a: GamepadButton;
        b: GamepadButton;
        x: GamepadButton;
        y: GamepadButton;
    };
    bumper: {
        left: GamepadButton;
        right: GamepadButton;
    };
    triggers: {
        left: GamepadButton;
        right: GamepadButton;
    };
    stick: {
        left: {
            horizontal: number;
            vertical: number;
            button: GamepadButton;
        };
        right: {
            horizontal: number;
            vertical: number;
            button: GamepadButton;
        };
    };
    dpad: {
        up: GamepadButton;
        down: GamepadButton;
        left: GamepadButton;
        right: GamepadButton;
    };
    back: GamepadButton;
    start: GamepadButton;
} | null>;
declare function useGamepad(options?: UseGamepadOptions): {
    isSupported: Accessor<boolean>;
    onConnected: _solidjs_use_shared.EventHookOn<number>;
    onDisconnected: _solidjs_use_shared.EventHookOn<number>;
    gamepads: Accessor<Gamepad[]>;
    pause: _solidjs_use_shared.Fn;
    resume: _solidjs_use_shared.Fn;
    isActive: Accessor<boolean>;
};
type UseGamepadReturn = ReturnType<typeof useGamepad>;

export { UseGamepadOptions, UseGamepadReturn, mapGamepadToXbox360Controller, useGamepad };
